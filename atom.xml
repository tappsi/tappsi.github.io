<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tappsi's Engineering and Technology Blog]]></title>
  <link href="http://tappsi.github.io/atom.xml" rel="self"/>
  <link href="http://tappsi.github.io/"/>
  <updated>2016-11-16T09:05:18-05:00</updated>
  <id>http://tappsi.github.io/</id>
  <author>
    <name><![CDATA[Tappsi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Manejar El Crecimiento]]></title>
    <link href="http://tappsi.github.io/blog/2016/11/16/manejar-el-crecimiento/"/>
    <updated>2016-11-16T06:56:01-05:00</updated>
    <id>http://tappsi.github.io/blog/2016/11/16/manejar-el-crecimiento</id>
    <content type="html"><![CDATA[<p>De un MVP a un producto, sobrevivir a los dos primeros años de una startup
consiguiendo dinero de inversionistas y lograr que aquello que se construyó
con rapidez escale tiene retos organizacionales y técnicos, madurar y evolucionar, entender que esto conlleva a cambios de ritmos y escalamientos.</p>

<p>Este escrito va dirigido a personas no técnicas, pero que están relacionadas
con la tecnología en el cual mostramos algunas metáforas para alinear las
expectativas con las realidades del crecimiento.</p>

<h2>Dinero</h2>

<p>Al comienzo de una startup, cuando el dinero escasea, hay que hacer prototipos
rápidos y mostrar que efectivamente estas pruebas de concepto llegan a producción.</p>

<p>Idealmente se cuenta con un producto que hace lo que tiene que hacer y esta
prueba de concepto es capaz de servir a una centena o miles de usuarios si se
emplearon herramientas con un equipo pequeño y ágil.</p>

<p><img src="http://tappsi.github.io/images/posts/managing-growth-mvp.jpg" title="ejemplo mínimo de graphviz" ></p>

<p>En ese momento lo que se logró fue crear una canoa que era muy rápida para
cruzar ríos, el balance entre la estabilidad y la innovación está claramente
definido en el marco de presentaciones a los inversionistas.  La canoa puede ser preciosa, pero sigue siendo una canoa.</p>

<p>Después de pasar las rondas de inversión, se desea contar con un producto que
sea capaz de mostrar el crecimiento y la estabilidad necesaria para que las
personas que lo usan se sientan en una embarcación así:</p>

<p><img src="http://tappsi.github.io/images/posts/managing-growth-goal.jpg" title="ejemplo mínimo de graphviz" ></p>

<p>El único detalle es que ya los órdenes de magnitud en cantidad de usuarios es de 2 o más de diferencia, se habla de centenas de miles o millones de usuarios.</p>

<p>A recordar: Un MVP no puede crecer indefinidamente, internamente se requieren
cambios para satisfacer las necesidades(nuevas en tamaño o en objetivos).</p>

<h2>Personal</h2>

<p>Mantener una estructura sin demasiadas jerarquías y lo más plana posible es una de las metas fundamentales para que la comunicación sea efectiva y se eviten los teléfonos rotos.</p>

<p>Que el equipo crezca y sea adaptable a las necesidades del producto requiere que haya un proceso claro de priorización y que las estimaciones y la confianza se mantenga para que las expectativas puedan estar en la realidad de la capacidad del equipo.</p>

<p>Metáfora: Una mujer puede tener un hijo en 9 meses, pero 9 mujeres no pueden tener un hijo en un mes.</p>

<h2>Cultura</h2>

<p>Toda la empresa crece, finanzas, atención al cliente y las nuevas herramientas
y servicios con los cuales se hace integraciones, así mismo el equipo de desarrollo y de producto deben crecer.</p>

<p>Hacer cambios a un producto establecido desde la perspectiva de usuarios finales es uno de los retos más grandes que tiene el equipo de producto y requiere además del olfato, basarse en números para hacer priorizaciones adecuadas.</p>

<p>Una campaña tuvo éxito? Cómo se midió? Si no fue el resultado, cuáles fueron las incidencias presentadas y las suposiciones que tenemos respecto a los objetivos que no logramos obtener.  Cómo mitigar el efecto en un próximo intento?</p>

<p>Los equipos pequeños de desarrollo y con tareas específicas pueden ser más
rápidos si tienen forma de comunicarse unos con otros, lo cual nos lleva al tema de la documentación que es uno en sí mismo.</p>

<p>A recordar: Velocidad o Precisión, al principio con pocos usuarios es posible fallar, una operación de 24x7 requiere mantener estabilidad.</p>

<h2>Documentación y automatización</h2>

<p>Establecer las herramientas para que haya conocimiento organizacional en la profundidad que requiere cada área es otro reto a salvar, un sistema de gestión de calidad debe tener en cuenta que cada área es particular y las herramientas para cada una pueden variar para facilitar la actualización de la información y la visibilidad de la misma.</p>

<p>A medida que crece el producto, se multiplican las integraciones y las reglas de negocio se van adaptando, estos cambios implican que lo que ya estaba estable no lo esté más, porque simplemente la carga cognitiva es tan grande que ya no cabe en la cabeza de una sola persona todos los aspectos que hay que tener en cuenta y porque la sensibilidad del sistema se ha disparado.</p>

<p>Para mitigar las incidencias de una operación se tienen tres herramientas, en el siguiente orden:</p>

<ol>
<li>Identificar</li>
<li>Documentar</li>
<li>Automatizar</li>
</ol>


<p>Solamente tiene sentido automatizar un proceso si este se está repitiendo y la oportunidad de generar un fallo mayor al tratar de hacer el arreglo reviste peligro.  La automatización es una etapa posterior desde el ámbito de producto.</p>

<p>Metáfora: Es mejor tener un lápiz muy gastado a una memoria muy grande.</p>

<h2>Aspectos técnicos</h2>

<p>Un sistema requiere:</p>

<ul>
<li>Programas: Lo mágico que funciona en los computadores</li>
<li>Infraestructura: Los computadores sobre los que corre la magia</li>
<li>Control de cambios: Las modificaciones y los nuevos rumbos de la magia</li>
<li>Despliegue: Que la versión anterior sea cambiada por la nueva</li>
<li>Administración de código y configuraciones: Que esto pueda seguir siendo creado por personas</li>
<li>Ser medido: Si medimos, podemos tomar mejores decisiones y hacer más magia.</li>
</ul>


<p>Los programas se crean a partir de otras librerías y programas, con lo cual, el mantener las versiones actualizadas con las más estables se obtiene un sistema sano.  Y viene la temida deuda técnica a medida que los sistemas crecen.</p>

<p>La deuda técnica se genera por:</p>

<ul>
<li>Hacer algo rápido para que funcione, a pesar de que se sabe que se puede hacer mejor.</li>
<li>No contar con una cultura de mantenimiento de versiones recientes de las librerías o subsistemas.</li>
<li>Trabajo de personas que pueden no estar al nivel de las necesidades o los cambios del ambiente.</li>
<li>Cambio de prioridades.</li>
<li>Cambio de requerimientos.</li>
</ul>


<p>Con lo cual, al principio es posible que la deuda técnica sea alta, esta es sostenible inicialmente.</p>

<p>La deuda se puede mitigrar tomando tiempo para reescribir aquello que se sabe requiere mejoras.  Puede resultar mejor rehacer porciones del sistema desde cero y es un costo que está escondido.</p>

<p>A recordar: Si la deuda técnica crece, la velocidad disminuye dramáticamente.</p>

<h2>Referentes</h2>

<ul>
<li><a href="https://axiacore.com/blog/por-que-modificar-el-software-cuesta-tanto/">Metáfora de modificación</a></li>
</ul>


<h2>Créditos</h2>

<p>Los dibujos fueron hechos en lápiz por Jesika Vanegas, quien gentilmente los
preparó para esta publicación con su total autoría.</p>

<h2>Preguntas</h2>

<p>Hay conceptos que se volvieron demasiado técnicos en este escrito? Si es así, déjeme saber cuáles para lograr encontrar metáforas o analogías para hacerlo más claro.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gráficas Versionadas]]></title>
    <link href="http://tappsi.github.io/blog/2016/04/07/versioned-graphs/"/>
    <updated>2016-04-07T15:33:44-05:00</updated>
    <id>http://tappsi.github.io/blog/2016/04/07/versioned-graphs</id>
    <content type="html"><![CDATA[<p>Mis habilidades gráficas y sentido artístico están por
debajo de la media y dado que no aprendí ni me gusta
dibujar y que uso sistemas de manejo de versiones para
mi trabajo diario, hay una opción para generar gráficas
sencillas y poder modificarlas rápidamente.</p>

<p>El honorable <a href="http://www.graphviz.org/">graphviz</a> que
en cualquier distribución es fácil de instalar , por ejemplo
<code>apt-get install graphviz</code> es una opción para evaluar.</p>

<p>Vía
<a href="http://www.webgraphviz.com/">webgraphvizweb</a> es muy sencillo
hacer la edición.</p>

<p>Por ejemplo, para hacer una gráfica como la siguiente:</p>

<p><img src="http://tappsi.github.io/images/posts/graphviz-simple-diagram.png" title="ejemplo mínimo de graphviz" ></p>

<p>Se escribe:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>A -&gt; B
</span><span class='line'>B -&gt; C
</span><span class='line'>A -&gt; C</span></code></pre></td></tr></table></div></figure>


<p>Esta herramienta está integrada en varias soluciones como:</p>

<ul>
<li><a href="https://moinmo.in/GraphVizForMoin">MoinMoin</a></li>
<li><a href="http://mkdocs.org">mkdocs</a></li>
</ul>


<p>Aunque los gráficos lucen un poco arcaicos, es fácil actualizarlos y en una empresa en la cual hay evolución
continua de procesos tiene todo el sentido contar con ella.</p>

<p>¿Ha encontrado otras soluciones que sean sencillas y permitan algo similar?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Formulario De Búsqueda en Flask]]></title>
    <link href="http://tappsi.github.io/blog/2016/03/18/formulario-de-busqueda-en-flask/"/>
    <updated>2016-03-18T10:19:28-05:00</updated>
    <id>http://tappsi.github.io/blog/2016/03/18/formulario-de-busqueda-en-flask</id>
    <content type="html"><![CDATA[<p>En <a href="http://tappsi.github.io/blog/2016/03/18/listview-en-flask">la entrada anterior</a> hicimos un <code>ListView</code>
para mostrar un listado de objetos que pertenecen a un modelo específico.</p>

<p>Ahora miramos cómo agregar un formulario de búsqueda, para que nuestro usuario
pueda filtrar los objetos por sus campos:</p>

<p><img src="http://tappsi.github.io/images/posts/passengers-search-form.png" title="Listado de pasajeros con formulario de búsqueda" ></p>

<p>Extendemos la clase <code>ListView</code>, agregando el atributo que se refiere al formulario de búsqueda
(<code>search_form</code>) y un método que genera una petición de SQLAlchemy a partir de los campos del formulario:</p>

<figure class='code'><figcaption><span>base.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">ListView</span><span class="p">(</span><span class="n">BaseView</span><span class="p">):</span>
</span><span class='line'>    <span class="n">methods</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;GET&#39;</span><span class="p">,</span> <span class="s">&#39;POST&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">template_name</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="n">context_object_name</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="n">paginate_by</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="n">search_form</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="n">model</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">search</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">search_form</span><span class="p">,</span> <span class="n">object_list</span><span class="p">):</span>
</span><span class='line'>        <span class="c"># Idea from http://stackoverflow.com/a/14876320/914332</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">field</span> <span class="ow">in</span> <span class="n">search_form</span><span class="p">:</span>
</span><span class='line'>            <span class="k">try</span><span class="p">:</span>
</span><span class='line'>                <span class="n">key</span><span class="p">,</span> <span class="n">op</span> <span class="o">=</span> <span class="n">field</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;__&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>            <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
</span><span class='line'>                <span class="c"># raise Exception(&#39;Invalid filter&#39;)</span>
</span><span class='line'>                <span class="c"># it also may be csrf_token or submit field</span>
</span><span class='line'>                <span class="k">continue</span>
</span><span class='line'>            <span class="n">column</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
</span><span class='line'>            <span class="k">if</span> <span class="ow">not</span> <span class="n">column</span><span class="p">:</span>
</span><span class='line'>                <span class="k">raise</span> <span class="ne">Exception</span><span class="p">(</span><span class="s">&#39;Invalid filter column: </span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">column</span><span class="p">)</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">field</span><span class="o">.</span><span class="n">data</span><span class="p">:</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">op</span> <span class="o">==</span> <span class="s">&#39;in&#39;</span><span class="p">:</span>
</span><span class='line'>                    <span class="n">filt</span> <span class="o">=</span> <span class="n">column</span><span class="o">.</span><span class="n">in_</span><span class="p">(</span><span class="n">field</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;,&#39;</span><span class="p">))</span>
</span><span class='line'>                <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>                        <span class="n">attr</span> <span class="o">=</span> <span class="nb">filter</span><span class="p">(</span>
</span><span class='line'>                            <span class="k">lambda</span> <span class="n">e</span><span class="p">:</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">column</span><span class="p">,</span> <span class="n">e</span> <span class="o">%</span> <span class="n">op</span><span class="p">),</span>
</span><span class='line'>                            <span class="p">[</span><span class="s">&#39;</span><span class="si">%s</span><span class="s">&#39;</span><span class="p">,</span> <span class="s">&#39;</span><span class="si">%s</span><span class="s">_&#39;</span><span class="p">,</span> <span class="s">&#39;__</span><span class="si">%s</span><span class="s">__&#39;</span><span class="p">]</span>
</span><span class='line'>                        <span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">%</span> <span class="n">op</span>
</span><span class='line'>                    <span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
</span><span class='line'>                        <span class="k">raise</span> <span class="ne">Exception</span><span class="p">(</span><span class="s">&#39;Invalid filter operator: </span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">op</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>                    <span class="n">data</span> <span class="o">=</span> <span class="n">field</span><span class="o">.</span><span class="n">data</span>
</span><span class='line'>
</span><span class='line'>                    <span class="k">if</span> <span class="n">attr</span> <span class="ow">in</span> <span class="p">(</span><span class="s">&#39;ilike&#39;</span><span class="p">,</span> <span class="s">&#39;like&#39;</span><span class="p">):</span>
</span><span class='line'>                        <span class="n">data</span> <span class="o">=</span> <span class="s">&#39;</span><span class="si">%%%s%%</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">field</span><span class="o">.</span><span class="n">data</span>
</span><span class='line'>
</span><span class='line'>                    <span class="n">filt</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="n">column</span><span class="p">,</span> <span class="n">attr</span><span class="p">)(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>                <span class="n">object_list</span> <span class="o">=</span> <span class="n">object_list</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">filt</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">object_list</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_context</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="n">context</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>        <span class="n">context_object_name</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">context_object_name</span> <span class="ow">or</span> <span class="s">&#39;object_list&#39;</span>
</span><span class='line'>        <span class="n">object_list</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_objects</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># Search form</span>
</span><span class='line'>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">search_form</span><span class="p">:</span>
</span><span class='line'>            <span class="n">search_form</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">search_form</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">form</span><span class="p">)</span>
</span><span class='line'>            <span class="n">context</span><span class="p">[</span><span class="s">&#39;search_form&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">search_form</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">&#39;POST&#39;</span> <span class="ow">and</span> <span class="n">search_form</span><span class="o">.</span><span class="n">validate</span><span class="p">():</span>
</span><span class='line'>                <span class="n">object_list</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">search_form</span><span class="p">,</span> <span class="n">object_list</span><span class="p">)</span>
</span><span class='line'>        <span class="c"># Pagination</span>
</span><span class='line'>        <span class="c"># ... (see previous post)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">context</span>
</span></code></pre></td></tr></table></div></figure>


<p>La versión completa de <code>ListView</code> junto con la vista de ejemplo
se puede encontrar aquí: <a href="http://tappsi.github.io/blog/2016/03/18/listview-en-flask">ListView en Flask</a>.</p>

<p>El el siguiente paso agregamos un formulario de búsqueda a nuesra vista:</p>

<figure class='code'><figcaption><span>views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">PassengersListView</span><span class="p">(</span><span class="n">ListView</span><span class="p">):</span>
</span><span class='line'>    <span class="n">template_name</span> <span class="o">=</span> <span class="s">&#39;passengers/list.html&#39;</span>
</span><span class='line'>    <span class="n">context_object_name</span> <span class="o">=</span> <span class="s">&#39;passengers&#39;</span>
</span><span class='line'>    <span class="n">search_form</span> <span class="o">=</span> <span class="n">PassengersSearchForm</span>
</span><span class='line'>    <span class="n">model</span> <span class="o">=</span> <span class="n">Passenger</span>
</span></code></pre></td></tr></table></div></figure>


<p>El código del formulario es siguiente:</p>

<figure class='code'><figcaption><span>forms.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask_wtf</span> <span class="kn">import</span> <span class="n">Form</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">wtforms</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">SearchForm</span><span class="p">(</span><span class="n">Form</span><span class="p">):</span>
</span><span class='line'>    <span class="n">submit</span> <span class="o">=</span> <span class="n">wtforms</span><span class="o">.</span><span class="n">SubmitField</span><span class="p">(</span><span class="s">&#39;Filtrar&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class='line'>        <span class="nb">super</span><span class="p">(</span><span class="n">SearchForm</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="n">field</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">:</span>
</span><span class='line'>            <span class="n">field</span><span class="o">.</span><span class="n">validators</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">wtforms</span><span class="o">.</span><span class="n">validators</span><span class="o">.</span><span class="n">Optional</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">PassengersSearchForm</span><span class="p">(</span><span class="n">SearchForm</span><span class="p">):</span>
</span><span class='line'>    <span class="n">id__eq</span> <span class="o">=</span> <span class="n">wtforms</span><span class="o">.</span><span class="n">StringField</span><span class="p">()</span>
</span><span class='line'>    <span class="n">name__ilike</span> <span class="o">=</span> <span class="n">wtforms</span><span class="o">.</span><span class="n">StringField</span><span class="p">()</span>
</span><span class='line'>    <span class="n">email__ilike</span> <span class="o">=</span> <span class="n">wtforms</span><span class="o">.</span><span class="n">StringField</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Para que la búsqueda funcione, los campos del formulario deben coincidir con los campos
del modelo <code>Passenger</code> (<a href="http://tappsi.github.io/blog/2016/03/18/listview-en-flask">ver el modelo</a>),
acompañados con operadores de comparación de SQLAlchemy:</p>

<pre><code>eq para ==
le para &lt;=
lt para &lt;
ne para !=
in
like
ilike
</code></pre>

<p>El listado de operadores se puede encontrar aquí:
<a href="http://docs.sqlalchemy.org/en/rel_0_8/orm/internals.html#sqlalchemy.orm.properties.ColumnProperty.Comparator">sqlalchemy.orm.properties.ColumnProperty.Comparator</a>.</p>

<p>Luego agregamos el formulario a la plantilla, asociada a la vista:</p>

<figure class='code'><figcaption><span>list.html  </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='jinja'><span class='line'><span class="cp">{%</span> <span class="k">extends</span> <span class="s2">&quot;layouts/base.html&quot;</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="cp">{%</span> <span class="k">import</span> <span class="s2">&quot;bootstrap/wtf.html&quot;</span> <span class="k">as</span> <span class="nv">wtf</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="cp">{%</span> <span class="k">block</span> <span class="nv">content</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;table class=&quot;table&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;tbody&gt;</span>
</span><span class='line'><span class="x">    &lt;form class=&quot;form form-horizontal&quot; method=&quot;post&quot; role=&quot;form&quot; action=&quot;</span><span class="cp">{{</span> <span class="nv">request.path</span> <span class="cp">}}</span><span class="x">&quot;&gt;</span>
</span><span class='line'><span class="x">      </span><span class="cp">{{</span> <span class="nv">search_form.csrf_token</span> <span class="cp">}}</span><span class="x"></span>
</span><span class='line'><span class="x">      &lt;tr&gt;</span>
</span><span class='line'><span class="x">        &lt;td&gt;</span><span class="cp">{{</span> <span class="nv">wtf.form_field</span><span class="o">(</span><span class="nv">search_form.id__eq</span><span class="o">,</span> <span class="nv">form_type</span><span class="o">=</span><span class="s1">&#39;inline&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">        &lt;td&gt;</span><span class="cp">{{</span> <span class="nv">wtf.form_field</span><span class="o">(</span><span class="nv">search_form.name__ilike</span><span class="o">,</span> <span class="nv">form_type</span><span class="o">=</span><span class="s1">&#39;inline&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">        &lt;td&gt;</span><span class="cp">{{</span> <span class="nv">wtf.form_field</span><span class="o">(</span><span class="nv">search_form.email__ilike</span><span class="o">,</span> <span class="nv">form_type</span><span class="o">=</span><span class="s1">&#39;inline&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">        &lt;td&gt;&lt;/td&gt;</span>
</span><span class='line'><span class="x">        &lt;td&gt;</span><span class="cp">{{</span> <span class="nv">wtf.form_field</span><span class="o">(</span><span class="nv">search_form.submit</span><span class="o">,</span> <span class="nv">form_type</span><span class="o">=</span><span class="s1">&#39;inline&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">      &lt;/tr&gt;</span>
</span><span class='line'><span class="x">    &lt;/form&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">{%</span> <span class="k">for</span> <span class="nv">passenger</span> <span class="k">in</span> <span class="nv">passengers</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;tr&gt;</span>
</span><span class='line'><span class="x">      &lt;td&gt;&lt;a href=&quot;</span><span class="cp">{{</span> <span class="nv">url_for</span><span class="o">(</span><span class="s1">&#39;passengers.passenger_detail&#39;</span><span class="o">,</span> <span class="nv">pk</span><span class="o">=</span><span class="nv">passenger.id</span><span class="o">)</span> <span class="cp">}}</span><span class="x">&quot;&gt;</span><span class="cp">{{</span> <span class="nv">passenger.id</span> <span class="cp">}}</span><span class="x">&lt;/a&gt;&lt;/td&gt;</span>
</span><span class='line'><span class="x">      &lt;td&gt;</span><span class="cp">{{</span> <span class="nv">passenger.name</span> <span class="cp">}}</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">      &lt;td&gt;</span><span class="cp">{{</span> <span class="nv">passenger.email</span> <span class="cp">}}</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">      &lt;td&gt;</span><span class="cp">{{</span> <span class="nv">passenger.phone</span> <span class="cp">}}</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">    &lt;/tr&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;/tbody&gt;</span>
</span><span class='line'><span class="x">&lt;/table&gt;</span>
</span><span class='line'><span class="cp">{%</span> <span class="k">endblock</span> <span class="cp">%}</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>En este ejemplo usamos <a href="https://pythonhosted.org/Flask-Bootstrap/forms.html">Flask-Bootstrap</a>
para renderizar los formularios con las clases de <a href="http://getbootstrap.com/">Bootstrap</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ListView en Flask]]></title>
    <link href="http://tappsi.github.io/blog/2016/03/18/listview-en-flask/"/>
    <updated>2016-03-18T09:26:50-05:00</updated>
    <id>http://tappsi.github.io/blog/2016/03/18/listview-en-flask</id>
    <content type="html"><![CDATA[<p>Muchos de nosotros, pasando de Django a Flask, extrañamos las vistas basadas en clases (CBV).</p>

<p>Vamos a hacer un <code>ListView</code> que nos ayude a crear listados de objetos, generados
a partir de un modelo específico.</p>

<p>Primero definimos una clase base <code>BaseView</code> que nos permitirá analizar las peticiones
y devolver el contexto y renderizar la plantilla:</p>

<figure class='code'><figcaption><span>base.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask.views</span> <span class="kn">import</span> <span class="n">View</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">render_template</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="n">current_app</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">BaseView</span><span class="p">(</span><span class="n">View</span><span class="p">):</span>
</span><span class='line'>    <span class="n">methods</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;GET&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">template_name</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="n">model</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_template_name</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">template_name</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>            <span class="k">raise</span> <span class="ne">NotImplementedError</span><span class="p">()</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">template_name</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">render_template</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">context</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">get_template_name</span><span class="p">(),</span> <span class="o">**</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_context</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">dispatch_request</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">render_template</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">get_context</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>


<p>Luego heredamos <code>BaseView</code> para definir el método <code>get_objects</code>,
que devuelve un listado de objetos del modelo especificado, y
<code>get_context</code> para añadir ese listado el contexto y agregar la paginación:</p>

<figure class='code'><figcaption><span>base.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">ListView</span><span class="p">(</span><span class="n">BaseView</span><span class="p">):</span>
</span><span class='line'>    <span class="n">methods</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;GET&#39;</span><span class="p">,</span> <span class="s">&#39;POST&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">template_name</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="n">context_object_name</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="n">paginate_by</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="n">model</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_objects</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_context</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="n">context</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>        <span class="n">context_object_name</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">context_object_name</span> <span class="ow">or</span> <span class="s">&#39;object_list&#39;</span>
</span><span class='line'>        <span class="n">object_list</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_objects</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># Pagination</span>
</span><span class='line'>        <span class="n">page</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">args</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;page&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">int</span><span class="p">)</span>
</span><span class='line'>        <span class="n">pagination</span> <span class="o">=</span> <span class="n">object_list</span><span class="o">.</span><span class="n">paginate</span><span class="p">(</span>
</span><span class='line'>            <span class="n">page</span><span class="p">,</span>
</span><span class='line'>            <span class="n">per_page</span><span class="o">=</span><span class="p">(</span>
</span><span class='line'>                <span class="bp">self</span><span class="o">.</span><span class="n">paginate_by</span> <span class="ow">or</span>
</span><span class='line'>                <span class="n">current_app</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;PAGINATION_ITEMS_PER_PAGE&#39;</span><span class="p">]</span>
</span><span class='line'>            <span class="p">),</span>
</span><span class='line'>            <span class="n">error_out</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>        <span class="n">context</span><span class="p">[</span><span class="s">&#39;pagination&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pagination</span>
</span><span class='line'>        <span class="n">context</span><span class="p">[</span><span class="n">context_object_name</span><span class="p">]</span> <span class="o">=</span> <span class="n">pagination</span><span class="o">.</span><span class="n">items</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">context</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">dispatch_request</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">render_template</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">get_context</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>


<p>Para usar <code>ListView</code> tenemos que especificar el modelo (<code>model</code>),
ruta hacía la plantilla (<code>template_name</code>) y número de objetos por
página (<code>paginate_by</code> o en la configuracón de nuestra aplicación
<code>current_app.config['PAGINATION_ITEMS_PER_PAGE']</code>):</p>

<figure class='code'><figcaption><span>views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Blueprint</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">passengers.models</span> <span class="kn">import</span> <span class="n">Passenger</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">passengers</span> <span class="o">=</span> <span class="n">Blueprint</span><span class="p">(</span><span class="s">&#39;passengers&#39;</span><span class="p">,</span> <span class="n">__name__</span><span class="p">,</span> <span class="n">template_folder</span><span class="o">=</span><span class="s">&#39;templates&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">PassengersListView</span><span class="p">(</span><span class="n">ListView</span><span class="p">):</span>
</span><span class='line'>    <span class="n">template_name</span> <span class="o">=</span> <span class="s">&#39;passengers/list.html&#39;</span>
</span><span class='line'>    <span class="n">context_object_name</span> <span class="o">=</span> <span class="s">&#39;passengers&#39;</span>
</span><span class='line'>    <span class="n">model</span> <span class="o">=</span> <span class="n">Passenger</span>
</span><span class='line'>    <span class="n">paginate_by</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_objects</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">Passenger</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="n">Passenger</span><span class="o">.</span><span class="n">created_at</span><span class="o">.</span><span class="n">desc</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="n">passengers</span><span class="o">.</span><span class="n">add_url_rule</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">,</span> <span class="n">view_func</span><span class="o">=</span><span class="n">PassengersListView</span><span class="o">.</span><span class="n">as_view</span><span class="p">(</span><span class="s">&#39;list&#39;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Donde el modelo de pasajeros se ve así:</p>

<figure class='code'><figcaption><span>views.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">Passenger</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>    <span class="n">__tablename__</span> <span class="o">=</span> <span class="s">&#39;passengers&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">id</span> <span class="o">=</span> <span class="n">Column</span><span class="p">(</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">name</span> <span class="o">=</span> <span class="n">Column</span><span class="p">(</span><span class="n">String</span><span class="p">(</span><span class="mi">255</span><span class="p">))</span>
</span><span class='line'>    <span class="n">email</span> <span class="o">=</span> <span class="n">Column</span><span class="p">(</span><span class="n">String</span><span class="p">(</span><span class="mi">255</span><span class="p">),</span> <span class="n">unique</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">phone</span> <span class="o">=</span> <span class="n">Column</span><span class="p">(</span><span class="n">String</span><span class="p">(</span><span class="mi">255</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora podemos crear la plantilla:</p>

<figure class='code'><figcaption><span>list.html  </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='jinja'><span class='line'><span class="cp">{%</span> <span class="k">extends</span> <span class="s2">&quot;layouts/base.html&quot;</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="cp">{%</span> <span class="k">import</span> <span class="s2">&quot;_macros.html&quot;</span> <span class="k">as</span> <span class="nv">macros</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="cp">{%</span> <span class="k">block</span> <span class="nv">content</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;table class=&quot;table&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;tbody&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">{%</span> <span class="k">for</span> <span class="nv">passenger</span> <span class="k">in</span> <span class="nv">passengers</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;tr&gt;</span>
</span><span class='line'><span class="x">      &lt;td&gt;&lt;a href=&quot;</span><span class="cp">{{</span> <span class="nv">url_for</span><span class="o">(</span><span class="s1">&#39;passengers.passenger_detail&#39;</span><span class="o">,</span> <span class="nv">pk</span><span class="o">=</span><span class="nv">passenger.id</span><span class="o">)</span> <span class="cp">}}</span><span class="x">&quot;&gt;</span><span class="cp">{{</span> <span class="nv">passenger.id</span> <span class="cp">}}</span><span class="x">&lt;/a&gt;&lt;/td&gt;</span>
</span><span class='line'><span class="x">      &lt;td&gt;</span><span class="cp">{{</span> <span class="nv">passenger.name</span> <span class="cp">}}</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">      &lt;td&gt;</span><span class="cp">{{</span> <span class="nv">passenger.email</span> <span class="cp">}}</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">      &lt;td&gt;</span><span class="cp">{{</span> <span class="nv">passenger.phone</span> <span class="cp">}}</span><span class="x">&lt;/td&gt;</span>
</span><span class='line'><span class="x">    &lt;/tr&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;/tbody&gt;</span>
</span><span class='line'><span class="x">&lt;/table&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;div class=&quot;pagination&quot;&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">{{</span> <span class="nv">macros.pagination_widget</span><span class="o">(</span><span class="nv">pagination</span><span class="o">,</span> <span class="s1">&#39;.index&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/div&gt;</span>
</span><span class='line'><span class="cp">{%</span> <span class="k">endblock</span> <span class="cp">%}</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>El widget para la paginación está basado en el snippet de
<a href="http://flask.pocoo.org/snippets/44/">Simple Pagination</a>:</p>

<figure class='code'><figcaption><span>_macros.html  </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='jinja'><span class='line'><span class="cp">{%</span> <span class="k">macro</span> <span class="nv">pagination_widget</span><span class="o">(</span><span class="nv">pagination</span><span class="o">,</span> <span class="nv">endpoint</span><span class="o">)</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;ul class=&quot;pagination&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;li</span><span class="cp">{%</span> <span class="k">if</span> <span class="k">not</span> <span class="nv">pagination.has_prev</span> <span class="cp">%}</span><span class="x"> class=&quot;disabled&quot;</span><span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span><span class="x">&gt;</span>
</span><span class='line'><span class="x">        &lt;a href=&quot;</span><span class="cp">{%</span> <span class="k">if</span> <span class="nv">pagination.has_prev</span> <span class="cp">%}{{</span> <span class="nv">url_for</span><span class="o">(</span><span class="nv">endpoint</span><span class="o">,</span> <span class="nv">page</span> <span class="o">=</span> <span class="nv">pagination.page</span> <span class="o">-</span> <span class="m">1</span><span class="o">,</span> <span class="o">**</span><span class="nv">kwargs</span><span class="o">)</span> <span class="cp">}}{%</span> <span class="k">else</span> <span class="cp">%}</span><span class="x">#</span><span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span><span class="x">&quot;&gt;</span>
</span><span class='line'><span class="x">            &amp;laquo;</span>
</span><span class='line'><span class="x">        &lt;/a&gt;</span>
</span><span class='line'><span class="x">    &lt;/li&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">{%</span> <span class="k">for</span> <span class="nv">p</span> <span class="k">in</span> <span class="nv">pagination.iter_pages</span><span class="o">()</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">        </span><span class="cp">{%</span> <span class="k">if</span> <span class="nv">p</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">            </span><span class="cp">{%</span> <span class="k">if</span> <span class="nv">p</span> <span class="o">==</span> <span class="nv">pagination.page</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">                &lt;li class=&quot;active&quot;&gt;</span>
</span><span class='line'><span class="x">                    &lt;a href=&quot;</span><span class="cp">{{</span> <span class="nv">url_for</span><span class="o">(</span><span class="nv">endpoint</span><span class="o">,</span> <span class="nv">page</span> <span class="o">=</span> <span class="nv">p</span><span class="o">,</span> <span class="o">**</span><span class="nv">kwargs</span><span class="o">)</span> <span class="cp">}}</span><span class="x">&quot;&gt;</span><span class="cp">{{</span> <span class="nv">p</span> <span class="cp">}}</span><span class="x">&lt;/a&gt;</span>
</span><span class='line'><span class="x">                &lt;/li&gt;</span>
</span><span class='line'><span class="x">            </span><span class="cp">{%</span> <span class="k">else</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">                &lt;li&gt;</span>
</span><span class='line'><span class="x">                    &lt;a href=&quot;</span><span class="cp">{{</span> <span class="nv">url_for</span><span class="o">(</span><span class="nv">endpoint</span><span class="o">,</span> <span class="nv">page</span> <span class="o">=</span> <span class="nv">p</span><span class="o">,</span> <span class="o">**</span><span class="nv">kwargs</span><span class="o">)</span> <span class="cp">}}</span><span class="x">&quot;&gt;</span><span class="cp">{{</span> <span class="nv">p</span> <span class="cp">}}</span><span class="x">&lt;/a&gt;</span>
</span><span class='line'><span class="x">                &lt;/li&gt;</span>
</span><span class='line'><span class="x">            </span><span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">        </span><span class="cp">{%</span> <span class="k">else</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">            &lt;li class=&quot;disabled&quot;&gt;&lt;a href=&quot;#&quot;&gt;&amp;hellip;&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="x">        </span><span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">    </span><span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;li</span><span class="cp">{%</span> <span class="k">if</span> <span class="k">not</span> <span class="nv">pagination.has_next</span> <span class="cp">%}</span><span class="x"> class=&quot;disabled&quot;</span><span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span><span class="x">&gt;</span>
</span><span class='line'><span class="x">        &lt;a href=&quot;</span><span class="cp">{%</span> <span class="k">if</span> <span class="nv">pagination.has_next</span> <span class="cp">%}{{</span> <span class="nv">url_for</span><span class="o">(</span><span class="nv">endpoint</span><span class="o">,</span> <span class="nv">page</span> <span class="o">=</span> <span class="nv">pagination.page</span> <span class="o">+</span> <span class="m">1</span><span class="o">,</span> <span class="o">**</span><span class="nv">kwargs</span><span class="o">)</span> <span class="cp">}}{%</span> <span class="k">else</span> <span class="cp">%}</span><span class="x">#</span><span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span><span class="x">&quot;&gt;</span>
</span><span class='line'><span class="x">            &amp;raquo;</span>
</span><span class='line'><span class="x">        &lt;/a&gt;</span>
</span><span class='line'><span class="x">    &lt;/li&gt;</span>
</span><span class='line'><span class="x">&lt;/ul&gt;</span>
</span><span class='line'><span class="cp">{%</span> <span class="k">endmacro</span> <span class="cp">%}</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Lee más acerca de cómo agregar un formulario de búsqueda a tu lista: <a href="http://tappsi.github.io/blog/2016/03/18/formulario-de-busqueda-en-flask">Formulario de búsqueda en Flask</a></p>
]]></content>
  </entry>
  
</feed>
